---
http_interactions:
- request:
    method: get
    uri: https://api.themoviedb.org/3/search/movie?page=1&query=barbie
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Authorization:
      - "<TMDB_ACCESS_TOKEN>"
      User-Agent:
      - Faraday v2.7.12
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Fri, 01 Dec 2023 21:18:46 GMT
      Server:
      - openresty
      X-Memc:
      - HIT
      X-Memc-Key:
      - 277689934aadb61be6666e7b4c735142
      X-Memc-Age:
      - '8399'
      X-Memc-Expires:
      - '15101'
      Etag:
      - W/"2a26f6203deeb2c5af7eaf6a43c803b5"
      Vary:
      - Accept-Encoding
      - Origin
      X-Cache:
      - Miss from cloudfront
      Via:
      - 1.1 29bccb8c5540050fe0570a18316def26.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - MIA3-P5
      Alt-Svc:
      - h3=":443"; ma=86400
      X-Amz-Cf-Id:
      - ArwbTbhqZJZoha8Wu6ITdUaG0gReUPOa9NCU5EPscmfmCLXjMRc4Lg==
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Fri, 01 Dec 2023 21:18:46 GMT
recorded_with: VCR 6.2.0
